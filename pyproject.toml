[tool.poetry]
name = "rdm"
version = "0.1.0"
description = "Interface testing framework"
readme = "README.md"
authors = ["Nowod <uomoob@outlook.com>"]
license = "MIT"
repository = "https://github.com/Nowod/Redemption"
classifiers = [
    "Programming Language :: Python :: 3.10",
]

[tool.poetry.dependencies]
python = "^3.10"
jsonschema = "^4.21.1"
jsonpath = "^0.82"
pydantic = "^2.7.0"
requests = "^2.31.0"
responses = "^0.25.0"
pytest = "^8.1.1"
pytest-html = "^4.1.1"
requests-toolbelt = "^1.0.0"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
testpaths = [
    "TestCases",
]
addopts = [
    "--html=report.html",
    "--self-contained-html",
    "-s",
    "-v",
    "--capture=no"
    ]

[tool.ruff]
include = ["pyproject.toml", "rdm/*.py", "TestCases/*.py", "conftest.py"]
select = [
  "E",  # pycodestyle errors
  "W",  # pycodestyle warnings
  "F",  # pyflakes
  "I",  # isort
  "C",  # flake8-comprehensions
  "B",  # flake8-bugbear
  "UP", # pyupgrade
]

ignore = [
  "E501", # line too long, handled by black
  "B008", # do not perform function calls in argument defaults
  "C901", # too complex
  "W191", # indentation contains tabs
]


[tool.ruff.isort]
known-third-party = ["fastapi", "pydantic", "starlette", "pytest"]

[tool.ruff.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true

[tool.ruff.format]
exclude = ["*.pyi"]

